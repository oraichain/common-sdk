/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.28.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from '@cosmjs/cosmwasm-stargate';
import { StdFee } from '@cosmjs/amino';
import { CosmosMsgForEmpty, BankMsg, Uint128, WasmMsg, Binary, Coin, Empty } from '@oraichain/common-contracts-sdk';
import { InstantiateMsg, ExecuteMsg, QueryMsg } from './DemoStargate.types';
export interface DemoStargateReadOnlyInterface {
  contractAddress: string;
}
export class DemoStargateQueryClient implements DemoStargateReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
  }
}
export interface DemoStargateInterface extends DemoStargateReadOnlyInterface {
  contractAddress: string;
  sender: string;
  execute: (
    {
      msg
    }: {
      msg: CosmosMsgForEmpty;
    },
    $fee?: number | StdFee | 'auto',
    $memo?: string,
    $funds?: Coin[]
  ) => Promise<ExecuteResult>;
}
export class DemoStargateClient extends DemoStargateQueryClient implements DemoStargateInterface {
  client: SigningCosmWasmClient;
  sender: string;
  contractAddress: string;

  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {
    super(client, contractAddress);
    this.client = client;
    this.sender = sender;
    this.contractAddress = contractAddress;
    this.execute = this.execute.bind(this);
  }

  execute = async (
    {
      msg
    }: {
      msg: CosmosMsgForEmpty;
    },
    $fee: number | StdFee | 'auto' = 'auto',
    $memo?: string,
    $funds?: Coin[]
  ): Promise<ExecuteResult> => {
    return await this.client.execute(
      this.sender,
      this.contractAddress,
      {
        execute: {
          msg
        }
      },
      $fee,
      $memo,
      $funds
    );
  };
}
